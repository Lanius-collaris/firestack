name: AAARRR

on:
  push:
    branches: [ n2 ]
  pull_request:
    branches: [ n2 ]
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup go1.21+
      uses: actions/setup-go@v4
      with:
        go-version: '>=1.21'

    - name: Build
      run: |
        ./make-aar nogo
      shell: bash

    - name: Test
      if: success()
      run: |
        # go test -v -race -bench=. -benchtime=100ms ./...
        echo "::notice::success"

    - name: Vet
      run: |
        # go vet ./... fails: archive.is/XcDl6
        go install go.uber.org/nilaway/cmd/nilaway@latest
        # fails
        # go run nilaway ./...
      shell: bash

      # github.com/actions/upload-artifact
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: firestack-aar-${{ github.sha }}
        path: firestack*.aar
        if-no-files-found: error

  checker:
    name: Security checker
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
    env:
      GO111MODULE: on
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Gosec Scanner
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt sarif -out results.sarif ./...'
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  # from: github.com/golangci/golangci-lint-action
  golangci-lint:
    name: Linter
    runs-on: ubuntu-latest
    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: allow read access to pull request. Use with `only-new-issues` option.
      pull-requests: read
      # Optional: Allow write access to checks to allow the action to annotate code in the PR.
      checks: write
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: false
      - name: Lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          args: --config=.golangci.yml --issues-exit-code=0
